# УРОК 8. ЗАДАНИЕ 3

"""
Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере.
Запрашивать у пользователя данные и заполнять список необходимо только числами.
Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована.
Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например, команду «stop».
При этом скрипт завершается, сформированный список с числами выводится на экран.
Подсказка: для этого задания примем, что пользователь может вводить только числа и строки.
Во время ввода пользователем очередного элемента необходимо реализовать проверку типа элемента.
Вносить его в список, только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
При этом работа скрипта не должна завершаться.
"""

from re import fullmatch


class MyOperationErr(Exception):
    def __init__(self, err_msg):
        self.err_msg = err_msg


num_list = []
while True:
    try:
        match = fullmatch('^\s*[-+]?\d*[.]?\d+(?:[eE][-+]?\d+)?\s*$', inp_str := input('Введите число : '))
        if match:
            num_list.append(int(match[0]) if fullmatch('^\s*[-+]?\d+\s*$', match[0]) else float(match[0]))
        elif inp_str.lower().find('stop') != -1:
            print('Введена команда "СТОП"!\n')
            break
        else:
            raise MyOperationErr('Не является числом!\n')
    except MyOperationErr as err:
        print(err)
print('СПИСОК ВВЕДЁННЫХ ЧИСЕЛ:\n', num_list)
